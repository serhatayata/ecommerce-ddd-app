version: '3.8'

networks:
  ecommerce-network:
    driver: bridge

volumes:
  sqlserver_data:
  sqlserver_log:
  rabbitmq_data:

services:
  # Infrastructure Services
  sqlserver:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Standard
      - SA_PASSWORD=sa.++112233
      - MSSQL_AGENT_ENABLED=true
    volumes:
      - sqlserver_data:/var/opt/mssql/data
      - sqlserver_log:/var/opt/mssql/log
    networks:
      - ecommerce-network
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -C -U sa -P "sa.++112233" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Application Services
  identity-api:
    container_name: identity-api
    build:
      context: .
      dockerfile: src/Identity/Identity.Api/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=IdentityDb;User Id=sa;Password=sa.++112233;TrustServerCertificate=true;
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

  order-management-api:
    container_name: order-management-api
    build:
      context: .
      dockerfile: src/OrderManagement/OrderManagement.Api/Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=OrderManagementDb;User Id=sa;Password=sa.++112233;TrustServerCertificate=true;
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672
      - Services__ProductCatalog__BaseAddress=http://product-catalog-api:8080/api/
      - Services__PaymentSystem__BaseAddress=http://payment-system-api:8080/api/
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      identity-api:
        condition: service_started
      product-catalog-api:
        condition: service_started
      payment-system-api:
        condition: service_started
      stock-api:
        condition: service_started
      shipping-api:
        condition: service_started
    networks:
      - ecommerce-network
    restart: unless-stopped

  payment-system-api:
    container_name: payment-system-api
    build:
      context: .
      dockerfile: src/PaymentSystem/PaymentSystem.Api/Dockerfile
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=PaymentSystemDb;User Id=sa;Password=sa.++112233;TrustServerCertificate=true;
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672
      - Services__OrderManagement__BaseAddress=http://order-management-api:8080/api/
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

  product-catalog-api:
    container_name: product-catalog-api
    build:
      context: .
      dockerfile: src/ProductCatalog/ProductCatalog.Api/Dockerfile
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=ProductCatalogDb;User Id=sa;Password=sa.++112233;TrustServerCertificate=true;
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

  shipping-api:
    container_name: shipping-api
    build:
      context: .
      dockerfile: src/Shipping/Shipping.Api/Dockerfile
    ports:
      - "5004:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=ShippingDb;User Id=sa;Password=sa.++112233;TrustServerCertificate=true;
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

  stock-api:
    container_name: stock-api
    build:
      context: .
      dockerfile: src/Stock/Stock.Api/Dockerfile
    ports:
      - "5005:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=StockDb;User Id=sa;Password=sa.++112233;TrustServerCertificate=true;
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

  notification-worker:
    container_name: notification-worker
    build:
      context: .
      dockerfile: src/Notification/Notification.Worker/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=NotificationDb;User Id=sa;Password=sa.++112233;TrustServerCertificate=true;
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped
